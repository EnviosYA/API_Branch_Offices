// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PS.Template.API.Entities;

namespace PS.Template.AccessData.Migrations
{
    [DbContext(typeof(SucursalDBContext))]
    partial class SucursalDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PS.Template.Domain.Entities.Direccion", b =>
                {
                    b.Property<int>("IdDireccion")
                        .HasColumnName("idDireccion")
                        .HasColumnType("int");

                    b.Property<int>("Altura")
                        .HasColumnType("int");

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("IdLocalidad")
                        .HasColumnName("idLocalidad")
                        .HasColumnType("int");

                    b.Property<string>("Latitud")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Longitud")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("IdDireccion");

                    b.HasIndex("IdLocalidad");

                    b.ToTable("Direccion");
                });

            modelBuilder.Entity("PS.Template.Domain.Entities.EstadoSucursal", b =>
                {
                    b.Property<int>("idEstado")
                        .HasColumnName("idEstado")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("idEstado");

                    b.ToTable("EstadoSucurusal");

                    b.HasData(
                        new
                        {
                            idEstado = 1,
                            Descripcion = "Habilitada"
                        },
                        new
                        {
                            idEstado = 2,
                            Descripcion = "Inhabilitada"
                        });
                });

            modelBuilder.Entity("PS.Template.Domain.Entities.Localidad", b =>
                {
                    b.Property<int>("IdLocalidad")
                        .HasColumnName("idLocalidad")
                        .HasColumnType("int");

                    b.Property<int>("Cp")
                        .HasColumnName("CP")
                        .HasColumnType("int");

                    b.Property<int>("IdProvincia")
                        .HasColumnName("idProvincia")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("IdLocalidad");

                    b.HasIndex("IdProvincia");

                    b.ToTable("Localidad");
                });

            modelBuilder.Entity("PS.Template.Domain.Entities.Provincia", b =>
                {
                    b.Property<int>("IdProvincia")
                        .HasColumnName("idProvincia")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("IdProvincia");

                    b.ToTable("Provincia");
                });

            modelBuilder.Entity("PS.Template.Domain.Entities.Sucursal", b =>
                {
                    b.Property<int>("IdSucursal")
                        .HasColumnName("idSucursal")
                        .HasColumnType("int");

                    b.Property<int>("IdDireccion")
                        .HasColumnName("idDireccion")
                        .HasColumnType("int");

                    b.Property<int>("IdEstado")
                        .HasColumnName("idEstado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("IdSucursal");

                    b.HasIndex("IdDireccion");

                    b.HasIndex("IdEstado");

                    b.ToTable("Sucursal");
                });

            modelBuilder.Entity("PS.Template.Domain.Entities.Direccion", b =>
                {
                    b.HasOne("PS.Template.Domain.Entities.Localidad", "IdLocalidadNavigation")
                        .WithMany("Direccion")
                        .HasForeignKey("IdLocalidad")
                        .HasConstraintName("FK_Direccion_Localidad")
                        .IsRequired();
                });

            modelBuilder.Entity("PS.Template.Domain.Entities.Localidad", b =>
                {
                    b.HasOne("PS.Template.Domain.Entities.Provincia", "IdProvinciaNavigation")
                        .WithMany("Localidad")
                        .HasForeignKey("IdProvincia")
                        .HasConstraintName("FK_Localidad_Provincia")
                        .IsRequired();
                });

            modelBuilder.Entity("PS.Template.Domain.Entities.Sucursal", b =>
                {
                    b.HasOne("PS.Template.Domain.Entities.Direccion", "IdDireccionNavigation")
                        .WithMany("Sucursal")
                        .HasForeignKey("IdDireccion")
                        .HasConstraintName("FK_Sucursal_Direccion")
                        .IsRequired();

                    b.HasOne("PS.Template.Domain.Entities.EstadoSucursal", "IdEstadoNavigation")
                        .WithMany("Sucursal")
                        .HasForeignKey("IdEstado")
                        .HasConstraintName("FK_Sucursal_EstadoSucursal")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
